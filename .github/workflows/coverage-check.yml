name: PR Coverage Check

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npx vitest run --coverage

      - name: Extract coverage and prepare data
        id: extract
        run: |
          COVERAGE_JSON="coverage/coverage-final.json"

          # Get total line coverage
          TOTAL_COVERED=$(jq '.total.lines.pct' $COVERAGE_JSON)
          echo "Total coverage: $TOTAL_COVERED"

          echo "COVERAGE=$TOTAL_COVERED" >> $GITHUB_OUTPUT

          # Identify under-covered files (<80%)
          UNDER_TESTED=$(jq 'to_entries | map(select(.value.lines.pct < 80)) | map({file: .key, percent: .value.lines.pct})' $COVERAGE_JSON)
          echo "UNDER_TESTED=$UNDER_TESTED" >> $GITHUB_OUTPUT

          # Set status flag
          if (( $(echo "$TOTAL_COVERED >= 80" | bc -l) )); then
            echo "COVERAGE_OK=true" >> $GITHUB_OUTPUT
          else
            echo "COVERAGE_OK=false" >> $GITHUB_OUTPUT
          fi

      - name: Post to n8n webhook
        run: |
          curl -X POST https://shrutisharma40.app.n8n.cloud/webhook/vitest-coverage \
          -H "Content-Type: application/json" \
          -d "$(jq -n \
            --argjson pr_number "${{ github.event.pull_request.number }}" \
            --arg sha "${{ github.sha }}" \
            --argjson coverage "${{ steps.extract.outputs.COVERAGE }}" \
            --argjson under_tested "${{ steps.extract.outputs.UNDER_TESTED }}" \
            --argjson coverage_ok "${{ steps.extract.outputs.COVERAGE_OK }}" \
            '{pr_number: $pr_number, sha: $sha, coverage: $coverage, under_tested: $under_tested, coverage_ok: $coverage_ok}')"

      - name: Fail if coverage is below 80%
        run: |
          echo "‚ùå Test coverage is below 80%. Current: ${{ steps.extract.outputs.COVERAGE }}%"
          exit 1
        if: steps.extract.outputs.COVERAGE_OK == 'false'
