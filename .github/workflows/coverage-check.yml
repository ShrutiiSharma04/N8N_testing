name: PR Coverage Check

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npx vitest run --coverage

      - name: Extract coverage and prepare data
        id: extract
        run: |
          COVERAGE_JSON="coverage/coverage-final.json"

          # Get total line coverage
          TOTAL_COVERED=$(jq '.total.lines.pct' $COVERAGE_JSON)
          echo "coverage=$TOTAL_COVERED" >> $GITHUB_OUTPUT

          # Collect under-covered files < 80%
          UNDER_TESTED=$(jq -c '
            to_entries
            | map(select(.value.lines.pct < 80))
            | map({
                key: (.key | gsub("\\\\"; "/") | gsub("^[A-Za-z]:/+"; "")),
                value: .value
              })
            | from_entries
          ' $COVERAGE_JSON)
          echo "under_tested=$UNDER_TESTED" >> $GITHUB_OUTPUT

          # Coverage OK flag
          if (( $(echo "$TOTAL_COVERED >= 80" | bc -l) )); then
            echo "coverage_ok=true" >> $GITHUB_OUTPUT
          else
            echo "coverage_ok=false" >> $GITHUB_OUTPUT
          fi

      - name: Post to n8n
        run: |
          curl -X POST https://shrutisharma40.app.n8n.cloud/webhook/vitest-coverage \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --argjson pr_number "${{ github.event.pull_request.number }}" \
              --arg sha "${{ github.sha }}" \
              --arg coverage_ok "${{ steps.extract.outputs.coverage_ok }}" \
              --argjson under_tested "${{ steps.extract.outputs.under_tested }}" \
              '{pr_number: $pr_number, sha: $sha, coverage_ok: ($coverage_ok == "true"), under_tested: $under_tested}')"
